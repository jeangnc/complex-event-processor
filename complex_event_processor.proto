syntax = "proto3";

import "google/protobuf/struct.proto";

package complex_event_processor;

option go_package = "github.com/jeangnc/complex-event-processor/pkg/proto";
option ruby_package = "ComplexEventProcessor::Proto";

service EventStream {
  rpc Filter (FilterRequest) returns (FilterResponse) {}
  rpc RegisterCondition (RegisterRequest) returns (RegisterResponse) {}
}

message FilterRequest {
  Event event = 1;
}

message FilterResponse {
  Event event = 1;
  repeated Condition conditions = 2;
}

message RegisterRequest {
  Condition condition = 1;
}

message RegisterResponse {
}

message Event {
  string id = 1;
  string tenant_id = 2;
  string kind = 3;
  google.protobuf.Struct payload = 4;
}

message Condition {
  string id = 1;
  string tenant_id = 2;
  string event_type = 3;
  repeated Predicate predicates = 4;
  optional bool desired_result = 5;
}

message Predicate {
  string name = 1;
  string operator = 2;
  google.protobuf.Value value = 3;
}

